/*
 * Copyright 2023 Diego Carlos Lima <https://diegocarloslima.com/>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.diegocarloslima.shortkuts.compat

import android.content.res.ColorStateList
import android.content.res.Resources
import android.content.res.Resources.NotFoundException
import androidx.annotation.ColorInt
import androidx.annotation.ColorRes
import androidx.annotation.DimenRes
import androidx.core.content.res.ResourcesCompat

/**
 * Uses [ResourcesCompat] to obtain a themed color integer associated with a particular resource ID.
 *
 * @param id The desired resource identifier, as generated by the aapt tool.
 *
 * @return A single color value in the form `0xAARRGGBB`.
 *
 * @throws NotFoundException if the given ID does not exist.
 *
 * @see ResourcesCompat.getColor
 */
@Throws(NotFoundException::class)
@ColorInt
inline fun Resources.getColorSk(@ColorRes id: Int, theme: Resources.Theme? = null): Int =
    ResourcesCompat.getColor(this, id, theme)

/**
 * Uses [ResourcesCompat] to obtain a themed color state list associated with a particular resource ID.
 *
 * @param id The desired resource identifier, as generated by the aapt tool.
 *
 * @return A themed [ColorStateList] object containing either a single solid color or multiple
 * colors that can be selected based on a state.
 *
 * @throws NotFoundException if the given ID does not exist.
 *
 * @see ResourcesCompat.getColorStateList
 */
@Throws(NotFoundException::class)
inline fun Resources.getColorStateListSk(
    @ColorRes id: Int,
    theme: Resources.Theme? = null,
): ColorStateList? =
    ResourcesCompat.getColorStateList(this, id, theme)

/**
 * Uses [ResourcesCompat] to retrieve a floating-point value for a particular resource ID.
 *
 * @param id The desired resource identifier, as generated by the aapt tool.
 *
 * @return The floating-point value contained in the resource.
 *
 * @throws NotFoundException if the given ID does not exist.
 *
 * @see ResourcesCompat.getFloat
 */
@Throws(NotFoundException::class)
inline fun Resources.getFloatSk(@DimenRes id: Int): Float = ResourcesCompat.getFloat(this, id)
